/*
 * (C) Copyright 2020 Radix DLT Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the “Software”),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'org.sonarqube'
apply plugin: 'project-report'
apply plugin: 'com.adarshr.test-logger'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

test {
    systemProperty "java.security.egd", "file:/dev/urandom"
}

dependencies {
    api 'com.github.radixdlt:radixdlt-java-common:rc~1.0-beta.5-SNAPSHOT'

    api group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
    api group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.10.0'
    api group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.14'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.17.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile 'nl.jqno.equalsverifier:equalsverifier:3.1.5'
    testCompile('com.flipkart.zjsonpatch:zjsonpatch:0.4.5') {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
}

// TODO: Consider moving to Google Checkstyle format
// TODO: https://github.com/checkstyle/checkstyle/tree/master/src/main/resources
checkstyle {
    configFile rootProject.file('.checkstyle.xml')
    toolVersion '8.10.1'
    showViolations = true
}

checkstyleTest {
    configFile rootProject.file('.checkstyle_test.xml')
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }

    exclude('universe.key')
}

task depsize {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
            out << "${it.name}".padRight(45)
            out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
        }
        println(out)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
  repositories.mavenInstaller {
    pom.project {
      licenses {
        license {
            name "The MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
      }
    }
  }
}
