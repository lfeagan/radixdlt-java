apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'org.sonarqube'
apply plugin: 'project-report'
apply plugin: 'com.adarshr.test-logger'

repositories {
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

test {
    systemProperty "java.security.egd", "file:/dev/urandom"
}

dependencies {
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.56'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.10.0'
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.10.0'
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.14'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    
    // Preferred versions for org.json and guava
    compile 'org.json:json:20180813'
    compile 'com.google.guava:guava:27.1-jre'

    // Jackson serializer
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.9'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.9.9'
    compile('com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.9.9') {
        // Use our JSON lib
        exclude group: 'org.json', module: 'json'
    }
    compile('com.fasterxml.jackson.datatype:jackson-datatype-guava:2.9.9') {
        // Use our Guava lib
        exclude group: 'com.google.guava', module: 'guava'
    }

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.17.0'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.11.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
}

// TODO: Consider moving to Google Checkstyle format
// TODO: https://github.com/checkstyle/checkstyle/tree/master/src/main/resources
checkstyle {
    configFile rootProject.file('.checkstyle.xml')
    toolVersion '8.10.1'
    showViolations = true
}

testlogger {
    theme 'plain'
}

checkstyleTest {
    configFile rootProject.file('.checkstyle_test.xml')
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }

    exclude('universe.key')
}

task depsize {
    doLast {
        final formatStr = "%,10.2f"
        final conf = configurations.default
        final size = conf.collect { it.length() / (1024 * 1024) }.sum()
        final out = new StringBuffer()
        out << 'Total dependencies size:'.padRight(45)
        out << "${String.format(formatStr, size)} Mb\n\n"
        conf.sort { -it.length() }
                .each {
            out << "${it.name}".padRight(45)
            out << "${String.format(formatStr, (it.length() / 1024))} kb\n"
        }
        println(out)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

install {
  repositories.mavenInstaller {
    pom.project {
      licenses {
        license {
            name "The MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
      }
    }
  }
}
